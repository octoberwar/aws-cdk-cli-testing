# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: build-and-integ
on:
  pull_request_target:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: integ-approval
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: yarn install --check-files
      - name: build
        run: npx projen build
      - name: Backup artifact permissions
        run: cd packages/@aws-cdk-testing/cli-integ/dist/js && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build-artifact
          path: packages/@aws-cdk-testing/cli-integ/dist/js
          overwrite: "true"
  integ:
    needs: build
    runs-on: aws-cdk_ubuntu-latest_4-core
    permissions:
      contents: read
      id-token: write
    environment: run-tests
    env:
      MAVEN_ARGS: --no-transfer-progress
      IS_CANARY: "true"
      CI: "true"
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: packages/@aws-cdk-testing/cli-integ/dist/js
      - name: Restore build artifact permissions
        run: cd packages/@aws-cdk-testing/cli-integ/dist/js && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Set up JDK 18
        if: matrix.suite == 'init-java' || matrix.suite == 'cli-integ-tests'
        uses: actions/setup-java@v4
        with:
          java-version: "18"
          distribution: corretto
      - name: Authenticate Via OIDC Role
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 14400
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME_FOR_TESTING }}
          role-session-name: run-tests@aws-cdk-cli-integ
          output-credentials: true
      - name: Set git identity
        run: |-
          git config --global user.name "aws-cdk-cli-integ"
          git config --global user.email "noreply@example.com"
      - name: Download and install the test artifact
        run: |-
          npm install --no-save packages/@aws-cdk-testing/cli-integ/dist/js/*.tgz
          mv $(./node_modules/.bin/test-root)/* .
      - name: Determine latest CLI version
        id: cli_version
        run: |-
          CLI_VERSION=$(cd ${TMPDIR:-/tmp} && npm view aws-cdk version)
          echo "CLI version: ${CLI_VERSION}"
          echo "cli_version=${CLI_VERSION}" >> $GITHUB_OUTPUT
      - name: "Run the test suite: ${{ matrix.suite }}"
        env:
          JEST_TEST_CONCURRENT: ${{ matrix.suite == 'cli-integ-tests' && 'true' || 'false' }}
          JSII_SILENCE_WARNING_DEPRECATED_NODE_VERSION: "true"
          JSII_SILENCE_WARNING_UNTESTED_NODE_VERSION: "true"
          JSII_SILENCE_WARNING_KNOWN_BROKEN_NODE_VERSION: "true"
          DOCKERHUB_DISABLED: "true"
          AWS_REGIONS: us-east-2,eu-west-1,eu-north-1,ap-northeast-1,ap-south-1
          CDK_MAJOR_VERSION: "2"
          RELEASE_TAG: latest
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bin/run-suite --use-cli-release=${{ steps.cli_version.outputs.cli_version }} --verbose ${{ matrix.suite }}
    strategy:
      fail-fast: false
      matrix:
        suite:
          - cli-integ-tests
          - init-csharp
          - init-fsharp
          - init-go
          - init-java
          - init-javascript
          - init-python
          - init-typescript-app
          - init-typescript-lib
          - tool-integrations
